---
title: "Logistic Regression"
jupyter: "nlp-python-kernel"
---

# Supervised ML & Sentiment Analysis

In supervised machine learning, you usually have an input $X$, which goes into your prediction function to get your $\hat{Y}$ You can then compare your prediction with the true value $Y$. This gives you your cost which you use to update the parameters The following image, summarizes the process.

![Diagram representation of Supervised Learning](images/supervised-learning.png)

To perform sentiment analysis on a tweet, you first have to represent the text (i.e. "I am happy because I am learning NLP ") as features, you then train your logistic regression classifier, and then you can use it to classify the text.

![Schematic representation of using supervised learning for sentiment classification.](images/paste-1.png)

Note that in this case, you either classify 1, for a positive sentiment, or 0, for a negative sentiment.

## Text Representation.

Given a set of tweets:

```{python}

```